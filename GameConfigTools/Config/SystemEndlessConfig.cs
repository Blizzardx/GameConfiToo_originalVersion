/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Config
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SystemEndlessConfig : TBase
  {
    private int _friendInvitationCd;
    private int _guildInvitationCd;
    private int _IdleInvitationCd;
    private int _treasureCountId;
    private int _treasureFreeCountId;
    private int _treasureInitNum;
    private int _treasureBuyNum;

    public int FriendInvitationCd
    {
      get
      {
        return _friendInvitationCd;
      }
      set
      {
        __isset.friendInvitationCd = true;
        this._friendInvitationCd = value;
      }
    }

    public int GuildInvitationCd
    {
      get
      {
        return _guildInvitationCd;
      }
      set
      {
        __isset.guildInvitationCd = true;
        this._guildInvitationCd = value;
      }
    }

    public int IdleInvitationCd
    {
      get
      {
        return _IdleInvitationCd;
      }
      set
      {
        __isset.IdleInvitationCd = true;
        this._IdleInvitationCd = value;
      }
    }

    public int TreasureCountId
    {
      get
      {
        return _treasureCountId;
      }
      set
      {
        __isset.treasureCountId = true;
        this._treasureCountId = value;
      }
    }

    public int TreasureFreeCountId
    {
      get
      {
        return _treasureFreeCountId;
      }
      set
      {
        __isset.treasureFreeCountId = true;
        this._treasureFreeCountId = value;
      }
    }

    public int TreasureInitNum
    {
      get
      {
        return _treasureInitNum;
      }
      set
      {
        __isset.treasureInitNum = true;
        this._treasureInitNum = value;
      }
    }

    public int TreasureBuyNum
    {
      get
      {
        return _treasureBuyNum;
      }
      set
      {
        __isset.treasureBuyNum = true;
        this._treasureBuyNum = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool friendInvitationCd;
      public bool guildInvitationCd;
      public bool IdleInvitationCd;
      public bool treasureCountId;
      public bool treasureFreeCountId;
      public bool treasureInitNum;
      public bool treasureBuyNum;
    }

    public SystemEndlessConfig() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.I32) {
              FriendInvitationCd = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              GuildInvitationCd = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.I32) {
              IdleInvitationCd = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.I32) {
              TreasureCountId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 50:
            if (field.Type == TType.I32) {
              TreasureFreeCountId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 60:
            if (field.Type == TType.I32) {
              TreasureInitNum = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 70:
            if (field.Type == TType.I32) {
              TreasureBuyNum = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SystemEndlessConfig");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.friendInvitationCd) {
        field.Name = "friendInvitationCd";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FriendInvitationCd);
        oprot.WriteFieldEnd();
      }
      if (__isset.guildInvitationCd) {
        field.Name = "guildInvitationCd";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(GuildInvitationCd);
        oprot.WriteFieldEnd();
      }
      if (__isset.IdleInvitationCd) {
        field.Name = "IdleInvitationCd";
        field.Type = TType.I32;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(IdleInvitationCd);
        oprot.WriteFieldEnd();
      }
      if (__isset.treasureCountId) {
        field.Name = "treasureCountId";
        field.Type = TType.I32;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TreasureCountId);
        oprot.WriteFieldEnd();
      }
      if (__isset.treasureFreeCountId) {
        field.Name = "treasureFreeCountId";
        field.Type = TType.I32;
        field.ID = 50;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TreasureFreeCountId);
        oprot.WriteFieldEnd();
      }
      if (__isset.treasureInitNum) {
        field.Name = "treasureInitNum";
        field.Type = TType.I32;
        field.ID = 60;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TreasureInitNum);
        oprot.WriteFieldEnd();
      }
      if (__isset.treasureBuyNum) {
        field.Name = "treasureBuyNum";
        field.Type = TType.I32;
        field.ID = 70;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TreasureBuyNum);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("SystemEndlessConfig(");
      sb.Append("FriendInvitationCd: ");
      sb.Append(FriendInvitationCd);
      sb.Append(",GuildInvitationCd: ");
      sb.Append(GuildInvitationCd);
      sb.Append(",IdleInvitationCd: ");
      sb.Append(IdleInvitationCd);
      sb.Append(",TreasureCountId: ");
      sb.Append(TreasureCountId);
      sb.Append(",TreasureFreeCountId: ");
      sb.Append(TreasureFreeCountId);
      sb.Append(",TreasureInitNum: ");
      sb.Append(TreasureInitNum);
      sb.Append(",TreasureBuyNum: ");
      sb.Append(TreasureBuyNum);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
