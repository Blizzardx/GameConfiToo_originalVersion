/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Config
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SystemCharacterConfig : TBase
  {
    private List<InitDIYConfig> _maleInitDIYList;
    private List<InitDIYConfig> _femaleInitDIYList;
    private int _maxLevel;

    public List<InitDIYConfig> MaleInitDIYList
    {
      get
      {
        return _maleInitDIYList;
      }
      set
      {
        __isset.maleInitDIYList = true;
        this._maleInitDIYList = value;
      }
    }

    public List<InitDIYConfig> FemaleInitDIYList
    {
      get
      {
        return _femaleInitDIYList;
      }
      set
      {
        __isset.femaleInitDIYList = true;
        this._femaleInitDIYList = value;
      }
    }

    public int MaxLevel
    {
      get
      {
        return _maxLevel;
      }
      set
      {
        __isset.maxLevel = true;
        this._maxLevel = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool maleInitDIYList;
      public bool femaleInitDIYList;
      public bool maxLevel;
    }

    public SystemCharacterConfig() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.List) {
              {
                MaleInitDIYList = new List<InitDIYConfig>();
                TList _list8 = iprot.ReadListBegin();
                for( int _i9 = 0; _i9 < _list8.Count; ++_i9)
                {
                  InitDIYConfig _elem10 = new InitDIYConfig();
                  _elem10 = new InitDIYConfig();
                  _elem10.Read(iprot);
                  MaleInitDIYList.Add(_elem10);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.List) {
              {
                FemaleInitDIYList = new List<InitDIYConfig>();
                TList _list11 = iprot.ReadListBegin();
                for( int _i12 = 0; _i12 < _list11.Count; ++_i12)
                {
                  InitDIYConfig _elem13 = new InitDIYConfig();
                  _elem13 = new InitDIYConfig();
                  _elem13.Read(iprot);
                  FemaleInitDIYList.Add(_elem13);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.I32) {
              MaxLevel = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SystemCharacterConfig");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (MaleInitDIYList != null && __isset.maleInitDIYList) {
        field.Name = "maleInitDIYList";
        field.Type = TType.List;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, MaleInitDIYList.Count));
          foreach (InitDIYConfig _iter14 in MaleInitDIYList)
          {
            _iter14.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (FemaleInitDIYList != null && __isset.femaleInitDIYList) {
        field.Name = "femaleInitDIYList";
        field.Type = TType.List;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, FemaleInitDIYList.Count));
          foreach (InitDIYConfig _iter15 in FemaleInitDIYList)
          {
            _iter15.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.maxLevel) {
        field.Name = "maxLevel";
        field.Type = TType.I32;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MaxLevel);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("SystemCharacterConfig(");
      sb.Append("MaleInitDIYList: ");
      sb.Append(MaleInitDIYList);
      sb.Append(",FemaleInitDIYList: ");
      sb.Append(FemaleInitDIYList);
      sb.Append(",MaxLevel: ");
      sb.Append(MaxLevel);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
