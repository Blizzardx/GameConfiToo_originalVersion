/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Config
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CharacterBaseConfig : TBase
  {
    private int _id;
    private int _gender;
    private string _modelBattle;
    private string _modelPrepare;
    private int _defaultAeroId;

    public int Id
    {
      get
      {
        return _id;
      }
      set
      {
        __isset.id = true;
        this._id = value;
      }
    }

    public int Gender
    {
      get
      {
        return _gender;
      }
      set
      {
        __isset.gender = true;
        this._gender = value;
      }
    }

    public string ModelBattle
    {
      get
      {
        return _modelBattle;
      }
      set
      {
        __isset.modelBattle = true;
        this._modelBattle = value;
      }
    }

    public string ModelPrepare
    {
      get
      {
        return _modelPrepare;
      }
      set
      {
        __isset.modelPrepare = true;
        this._modelPrepare = value;
      }
    }

    public int DefaultAeroId
    {
      get
      {
        return _defaultAeroId;
      }
      set
      {
        __isset.defaultAeroId = true;
        this._defaultAeroId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool id;
      public bool gender;
      public bool modelBattle;
      public bool modelPrepare;
      public bool defaultAeroId;
    }

    public CharacterBaseConfig() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.I32) {
              Id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              Gender = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.String) {
              ModelBattle = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.String) {
              ModelPrepare = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 50:
            if (field.Type == TType.I32) {
              DefaultAeroId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CharacterBaseConfig");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.id) {
        field.Name = "id";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id);
        oprot.WriteFieldEnd();
      }
      if (__isset.gender) {
        field.Name = "gender";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Gender);
        oprot.WriteFieldEnd();
      }
      if (ModelBattle != null && __isset.modelBattle) {
        field.Name = "modelBattle";
        field.Type = TType.String;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ModelBattle);
        oprot.WriteFieldEnd();
      }
      if (ModelPrepare != null && __isset.modelPrepare) {
        field.Name = "modelPrepare";
        field.Type = TType.String;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ModelPrepare);
        oprot.WriteFieldEnd();
      }
      if (__isset.defaultAeroId) {
        field.Name = "defaultAeroId";
        field.Type = TType.I32;
        field.ID = 50;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DefaultAeroId);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("CharacterBaseConfig(");
      sb.Append("Id: ");
      sb.Append(Id);
      sb.Append(",Gender: ");
      sb.Append(Gender);
      sb.Append(",ModelBattle: ");
      sb.Append(ModelBattle);
      sb.Append(",ModelPrepare: ");
      sb.Append(ModelPrepare);
      sb.Append(",DefaultAeroId: ");
      sb.Append(DefaultAeroId);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
