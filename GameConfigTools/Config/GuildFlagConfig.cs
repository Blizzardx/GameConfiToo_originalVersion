/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Config
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class GuildFlagConfig : TBase
  {
    private int _id;
    private int _flagType;
    private string _texture;
    private List<string> _optionColorList;

    public int Id
    {
      get
      {
        return _id;
      }
      set
      {
        __isset.id = true;
        this._id = value;
      }
    }

    public int FlagType
    {
      get
      {
        return _flagType;
      }
      set
      {
        __isset.flagType = true;
        this._flagType = value;
      }
    }

    public string Texture
    {
      get
      {
        return _texture;
      }
      set
      {
        __isset.texture = true;
        this._texture = value;
      }
    }

    public List<string> OptionColorList
    {
      get
      {
        return _optionColorList;
      }
      set
      {
        __isset.optionColorList = true;
        this._optionColorList = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool id;
      public bool flagType;
      public bool texture;
      public bool optionColorList;
    }

    public GuildFlagConfig() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.I32) {
              Id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              FlagType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.String) {
              Texture = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.List) {
              {
                OptionColorList = new List<string>();
                TList _list243 = iprot.ReadListBegin();
                for( int _i244 = 0; _i244 < _list243.Count; ++_i244)
                {
                  string _elem245 = null;
                  _elem245 = iprot.ReadString();
                  OptionColorList.Add(_elem245);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("GuildFlagConfig");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.id) {
        field.Name = "id";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id);
        oprot.WriteFieldEnd();
      }
      if (__isset.flagType) {
        field.Name = "flagType";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FlagType);
        oprot.WriteFieldEnd();
      }
      if (Texture != null && __isset.texture) {
        field.Name = "texture";
        field.Type = TType.String;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Texture);
        oprot.WriteFieldEnd();
      }
      if (OptionColorList != null && __isset.optionColorList) {
        field.Name = "optionColorList";
        field.Type = TType.List;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.String, OptionColorList.Count));
          foreach (string _iter246 in OptionColorList)
          {
            oprot.WriteString(_iter246);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("GuildFlagConfig(");
      sb.Append("Id: ");
      sb.Append(Id);
      sb.Append(",FlagType: ");
      sb.Append(FlagType);
      sb.Append(",Texture: ");
      sb.Append(Texture);
      sb.Append(",OptionColorList: ");
      sb.Append(OptionColorList);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
