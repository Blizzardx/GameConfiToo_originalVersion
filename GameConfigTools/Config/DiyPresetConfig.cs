/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Config
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class DiyPresetConfig : TBase
  {
    private int _id;
    private int _gender;
    private int _nameMessageId;
    private int _faceItemId;
    private int _faceParam1;
    private int _faceParam2;
    private int _faceParam3;
    private int _noseParam1;
    private int _noseParam2;
    private int _noseParam3;
    private int _eyeParam1;
    private int _eyeParam2;
    private int _eyeParam3;
    private int _eyeParam4;
    private int _mouthParam1;
    private int _mouthParam2;
    private int _mouthParam3;
    private int _skinItemId;
    private string _skinColor;
    private int _lensesId;
    private string _lensesColor;
    private int _eyebrowId;
    private string _eyebrowColor;
    private int _eyeShadowId;
    private string _eyeShadowColor;
    private int _lipGlossId;
    private string _lipGlossColor;
    private int _beardId;
    private string _beardColor;
    private int _blusherId;
    private string _blusherColor;
    private int _paintingId;
    private string _paintingColor;

    public int Id
    {
      get
      {
        return _id;
      }
      set
      {
        __isset.id = true;
        this._id = value;
      }
    }

    public int Gender
    {
      get
      {
        return _gender;
      }
      set
      {
        __isset.gender = true;
        this._gender = value;
      }
    }

    public int NameMessageId
    {
      get
      {
        return _nameMessageId;
      }
      set
      {
        __isset.nameMessageId = true;
        this._nameMessageId = value;
      }
    }

    public int FaceItemId
    {
      get
      {
        return _faceItemId;
      }
      set
      {
        __isset.faceItemId = true;
        this._faceItemId = value;
      }
    }

    public int FaceParam1
    {
      get
      {
        return _faceParam1;
      }
      set
      {
        __isset.faceParam1 = true;
        this._faceParam1 = value;
      }
    }

    public int FaceParam2
    {
      get
      {
        return _faceParam2;
      }
      set
      {
        __isset.faceParam2 = true;
        this._faceParam2 = value;
      }
    }

    public int FaceParam3
    {
      get
      {
        return _faceParam3;
      }
      set
      {
        __isset.faceParam3 = true;
        this._faceParam3 = value;
      }
    }

    public int NoseParam1
    {
      get
      {
        return _noseParam1;
      }
      set
      {
        __isset.noseParam1 = true;
        this._noseParam1 = value;
      }
    }

    public int NoseParam2
    {
      get
      {
        return _noseParam2;
      }
      set
      {
        __isset.noseParam2 = true;
        this._noseParam2 = value;
      }
    }

    public int NoseParam3
    {
      get
      {
        return _noseParam3;
      }
      set
      {
        __isset.noseParam3 = true;
        this._noseParam3 = value;
      }
    }

    public int EyeParam1
    {
      get
      {
        return _eyeParam1;
      }
      set
      {
        __isset.eyeParam1 = true;
        this._eyeParam1 = value;
      }
    }

    public int EyeParam2
    {
      get
      {
        return _eyeParam2;
      }
      set
      {
        __isset.eyeParam2 = true;
        this._eyeParam2 = value;
      }
    }

    public int EyeParam3
    {
      get
      {
        return _eyeParam3;
      }
      set
      {
        __isset.eyeParam3 = true;
        this._eyeParam3 = value;
      }
    }

    public int EyeParam4
    {
      get
      {
        return _eyeParam4;
      }
      set
      {
        __isset.eyeParam4 = true;
        this._eyeParam4 = value;
      }
    }

    public int MouthParam1
    {
      get
      {
        return _mouthParam1;
      }
      set
      {
        __isset.mouthParam1 = true;
        this._mouthParam1 = value;
      }
    }

    public int MouthParam2
    {
      get
      {
        return _mouthParam2;
      }
      set
      {
        __isset.mouthParam2 = true;
        this._mouthParam2 = value;
      }
    }

    public int MouthParam3
    {
      get
      {
        return _mouthParam3;
      }
      set
      {
        __isset.mouthParam3 = true;
        this._mouthParam3 = value;
      }
    }

    public int SkinItemId
    {
      get
      {
        return _skinItemId;
      }
      set
      {
        __isset.skinItemId = true;
        this._skinItemId = value;
      }
    }

    public string SkinColor
    {
      get
      {
        return _skinColor;
      }
      set
      {
        __isset.skinColor = true;
        this._skinColor = value;
      }
    }

    public int LensesId
    {
      get
      {
        return _lensesId;
      }
      set
      {
        __isset.lensesId = true;
        this._lensesId = value;
      }
    }

    public string LensesColor
    {
      get
      {
        return _lensesColor;
      }
      set
      {
        __isset.lensesColor = true;
        this._lensesColor = value;
      }
    }

    public int EyebrowId
    {
      get
      {
        return _eyebrowId;
      }
      set
      {
        __isset.eyebrowId = true;
        this._eyebrowId = value;
      }
    }

    public string EyebrowColor
    {
      get
      {
        return _eyebrowColor;
      }
      set
      {
        __isset.eyebrowColor = true;
        this._eyebrowColor = value;
      }
    }

    public int EyeShadowId
    {
      get
      {
        return _eyeShadowId;
      }
      set
      {
        __isset.eyeShadowId = true;
        this._eyeShadowId = value;
      }
    }

    public string EyeShadowColor
    {
      get
      {
        return _eyeShadowColor;
      }
      set
      {
        __isset.eyeShadowColor = true;
        this._eyeShadowColor = value;
      }
    }

    public int LipGlossId
    {
      get
      {
        return _lipGlossId;
      }
      set
      {
        __isset.lipGlossId = true;
        this._lipGlossId = value;
      }
    }

    public string LipGlossColor
    {
      get
      {
        return _lipGlossColor;
      }
      set
      {
        __isset.lipGlossColor = true;
        this._lipGlossColor = value;
      }
    }

    public int BeardId
    {
      get
      {
        return _beardId;
      }
      set
      {
        __isset.beardId = true;
        this._beardId = value;
      }
    }

    public string BeardColor
    {
      get
      {
        return _beardColor;
      }
      set
      {
        __isset.beardColor = true;
        this._beardColor = value;
      }
    }

    public int BlusherId
    {
      get
      {
        return _blusherId;
      }
      set
      {
        __isset.blusherId = true;
        this._blusherId = value;
      }
    }

    public string BlusherColor
    {
      get
      {
        return _blusherColor;
      }
      set
      {
        __isset.blusherColor = true;
        this._blusherColor = value;
      }
    }

    public int PaintingId
    {
      get
      {
        return _paintingId;
      }
      set
      {
        __isset.paintingId = true;
        this._paintingId = value;
      }
    }

    public string PaintingColor
    {
      get
      {
        return _paintingColor;
      }
      set
      {
        __isset.paintingColor = true;
        this._paintingColor = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool id;
      public bool gender;
      public bool nameMessageId;
      public bool faceItemId;
      public bool faceParam1;
      public bool faceParam2;
      public bool faceParam3;
      public bool noseParam1;
      public bool noseParam2;
      public bool noseParam3;
      public bool eyeParam1;
      public bool eyeParam2;
      public bool eyeParam3;
      public bool eyeParam4;
      public bool mouthParam1;
      public bool mouthParam2;
      public bool mouthParam3;
      public bool skinItemId;
      public bool skinColor;
      public bool lensesId;
      public bool lensesColor;
      public bool eyebrowId;
      public bool eyebrowColor;
      public bool eyeShadowId;
      public bool eyeShadowColor;
      public bool lipGlossId;
      public bool lipGlossColor;
      public bool beardId;
      public bool beardColor;
      public bool blusherId;
      public bool blusherColor;
      public bool paintingId;
      public bool paintingColor;
    }

    public DiyPresetConfig() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.I32) {
              Id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              Gender = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.I32) {
              NameMessageId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.I32) {
              FaceItemId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 50:
            if (field.Type == TType.I32) {
              FaceParam1 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 60:
            if (field.Type == TType.I32) {
              FaceParam2 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 70:
            if (field.Type == TType.I32) {
              FaceParam3 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 80:
            if (field.Type == TType.I32) {
              NoseParam1 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 90:
            if (field.Type == TType.I32) {
              NoseParam2 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 100:
            if (field.Type == TType.I32) {
              NoseParam3 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 110:
            if (field.Type == TType.I32) {
              EyeParam1 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 120:
            if (field.Type == TType.I32) {
              EyeParam2 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 130:
            if (field.Type == TType.I32) {
              EyeParam3 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 140:
            if (field.Type == TType.I32) {
              EyeParam4 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 150:
            if (field.Type == TType.I32) {
              MouthParam1 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 160:
            if (field.Type == TType.I32) {
              MouthParam2 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 170:
            if (field.Type == TType.I32) {
              MouthParam3 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 180:
            if (field.Type == TType.I32) {
              SkinItemId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 190:
            if (field.Type == TType.String) {
              SkinColor = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 200:
            if (field.Type == TType.I32) {
              LensesId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 210:
            if (field.Type == TType.String) {
              LensesColor = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 220:
            if (field.Type == TType.I32) {
              EyebrowId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 230:
            if (field.Type == TType.String) {
              EyebrowColor = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 240:
            if (field.Type == TType.I32) {
              EyeShadowId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 250:
            if (field.Type == TType.String) {
              EyeShadowColor = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 260:
            if (field.Type == TType.I32) {
              LipGlossId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 270:
            if (field.Type == TType.String) {
              LipGlossColor = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 280:
            if (field.Type == TType.I32) {
              BeardId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 290:
            if (field.Type == TType.String) {
              BeardColor = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 300:
            if (field.Type == TType.I32) {
              BlusherId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 310:
            if (field.Type == TType.String) {
              BlusherColor = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 320:
            if (field.Type == TType.I32) {
              PaintingId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 330:
            if (field.Type == TType.String) {
              PaintingColor = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("DiyPresetConfig");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.id) {
        field.Name = "id";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id);
        oprot.WriteFieldEnd();
      }
      if (__isset.gender) {
        field.Name = "gender";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Gender);
        oprot.WriteFieldEnd();
      }
      if (__isset.nameMessageId) {
        field.Name = "nameMessageId";
        field.Type = TType.I32;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(NameMessageId);
        oprot.WriteFieldEnd();
      }
      if (__isset.faceItemId) {
        field.Name = "faceItemId";
        field.Type = TType.I32;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FaceItemId);
        oprot.WriteFieldEnd();
      }
      if (__isset.faceParam1) {
        field.Name = "faceParam1";
        field.Type = TType.I32;
        field.ID = 50;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FaceParam1);
        oprot.WriteFieldEnd();
      }
      if (__isset.faceParam2) {
        field.Name = "faceParam2";
        field.Type = TType.I32;
        field.ID = 60;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FaceParam2);
        oprot.WriteFieldEnd();
      }
      if (__isset.faceParam3) {
        field.Name = "faceParam3";
        field.Type = TType.I32;
        field.ID = 70;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FaceParam3);
        oprot.WriteFieldEnd();
      }
      if (__isset.noseParam1) {
        field.Name = "noseParam1";
        field.Type = TType.I32;
        field.ID = 80;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(NoseParam1);
        oprot.WriteFieldEnd();
      }
      if (__isset.noseParam2) {
        field.Name = "noseParam2";
        field.Type = TType.I32;
        field.ID = 90;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(NoseParam2);
        oprot.WriteFieldEnd();
      }
      if (__isset.noseParam3) {
        field.Name = "noseParam3";
        field.Type = TType.I32;
        field.ID = 100;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(NoseParam3);
        oprot.WriteFieldEnd();
      }
      if (__isset.eyeParam1) {
        field.Name = "eyeParam1";
        field.Type = TType.I32;
        field.ID = 110;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EyeParam1);
        oprot.WriteFieldEnd();
      }
      if (__isset.eyeParam2) {
        field.Name = "eyeParam2";
        field.Type = TType.I32;
        field.ID = 120;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EyeParam2);
        oprot.WriteFieldEnd();
      }
      if (__isset.eyeParam3) {
        field.Name = "eyeParam3";
        field.Type = TType.I32;
        field.ID = 130;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EyeParam3);
        oprot.WriteFieldEnd();
      }
      if (__isset.eyeParam4) {
        field.Name = "eyeParam4";
        field.Type = TType.I32;
        field.ID = 140;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EyeParam4);
        oprot.WriteFieldEnd();
      }
      if (__isset.mouthParam1) {
        field.Name = "mouthParam1";
        field.Type = TType.I32;
        field.ID = 150;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MouthParam1);
        oprot.WriteFieldEnd();
      }
      if (__isset.mouthParam2) {
        field.Name = "mouthParam2";
        field.Type = TType.I32;
        field.ID = 160;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MouthParam2);
        oprot.WriteFieldEnd();
      }
      if (__isset.mouthParam3) {
        field.Name = "mouthParam3";
        field.Type = TType.I32;
        field.ID = 170;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MouthParam3);
        oprot.WriteFieldEnd();
      }
      if (__isset.skinItemId) {
        field.Name = "skinItemId";
        field.Type = TType.I32;
        field.ID = 180;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(SkinItemId);
        oprot.WriteFieldEnd();
      }
      if (SkinColor != null && __isset.skinColor) {
        field.Name = "skinColor";
        field.Type = TType.String;
        field.ID = 190;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SkinColor);
        oprot.WriteFieldEnd();
      }
      if (__isset.lensesId) {
        field.Name = "lensesId";
        field.Type = TType.I32;
        field.ID = 200;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(LensesId);
        oprot.WriteFieldEnd();
      }
      if (LensesColor != null && __isset.lensesColor) {
        field.Name = "lensesColor";
        field.Type = TType.String;
        field.ID = 210;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(LensesColor);
        oprot.WriteFieldEnd();
      }
      if (__isset.eyebrowId) {
        field.Name = "eyebrowId";
        field.Type = TType.I32;
        field.ID = 220;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EyebrowId);
        oprot.WriteFieldEnd();
      }
      if (EyebrowColor != null && __isset.eyebrowColor) {
        field.Name = "eyebrowColor";
        field.Type = TType.String;
        field.ID = 230;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(EyebrowColor);
        oprot.WriteFieldEnd();
      }
      if (__isset.eyeShadowId) {
        field.Name = "eyeShadowId";
        field.Type = TType.I32;
        field.ID = 240;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EyeShadowId);
        oprot.WriteFieldEnd();
      }
      if (EyeShadowColor != null && __isset.eyeShadowColor) {
        field.Name = "eyeShadowColor";
        field.Type = TType.String;
        field.ID = 250;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(EyeShadowColor);
        oprot.WriteFieldEnd();
      }
      if (__isset.lipGlossId) {
        field.Name = "lipGlossId";
        field.Type = TType.I32;
        field.ID = 260;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(LipGlossId);
        oprot.WriteFieldEnd();
      }
      if (LipGlossColor != null && __isset.lipGlossColor) {
        field.Name = "lipGlossColor";
        field.Type = TType.String;
        field.ID = 270;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(LipGlossColor);
        oprot.WriteFieldEnd();
      }
      if (__isset.beardId) {
        field.Name = "beardId";
        field.Type = TType.I32;
        field.ID = 280;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BeardId);
        oprot.WriteFieldEnd();
      }
      if (BeardColor != null && __isset.beardColor) {
        field.Name = "beardColor";
        field.Type = TType.String;
        field.ID = 290;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(BeardColor);
        oprot.WriteFieldEnd();
      }
      if (__isset.blusherId) {
        field.Name = "blusherId";
        field.Type = TType.I32;
        field.ID = 300;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BlusherId);
        oprot.WriteFieldEnd();
      }
      if (BlusherColor != null && __isset.blusherColor) {
        field.Name = "blusherColor";
        field.Type = TType.String;
        field.ID = 310;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(BlusherColor);
        oprot.WriteFieldEnd();
      }
      if (__isset.paintingId) {
        field.Name = "paintingId";
        field.Type = TType.I32;
        field.ID = 320;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(PaintingId);
        oprot.WriteFieldEnd();
      }
      if (PaintingColor != null && __isset.paintingColor) {
        field.Name = "paintingColor";
        field.Type = TType.String;
        field.ID = 330;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(PaintingColor);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("DiyPresetConfig(");
      sb.Append("Id: ");
      sb.Append(Id);
      sb.Append(",Gender: ");
      sb.Append(Gender);
      sb.Append(",NameMessageId: ");
      sb.Append(NameMessageId);
      sb.Append(",FaceItemId: ");
      sb.Append(FaceItemId);
      sb.Append(",FaceParam1: ");
      sb.Append(FaceParam1);
      sb.Append(",FaceParam2: ");
      sb.Append(FaceParam2);
      sb.Append(",FaceParam3: ");
      sb.Append(FaceParam3);
      sb.Append(",NoseParam1: ");
      sb.Append(NoseParam1);
      sb.Append(",NoseParam2: ");
      sb.Append(NoseParam2);
      sb.Append(",NoseParam3: ");
      sb.Append(NoseParam3);
      sb.Append(",EyeParam1: ");
      sb.Append(EyeParam1);
      sb.Append(",EyeParam2: ");
      sb.Append(EyeParam2);
      sb.Append(",EyeParam3: ");
      sb.Append(EyeParam3);
      sb.Append(",EyeParam4: ");
      sb.Append(EyeParam4);
      sb.Append(",MouthParam1: ");
      sb.Append(MouthParam1);
      sb.Append(",MouthParam2: ");
      sb.Append(MouthParam2);
      sb.Append(",MouthParam3: ");
      sb.Append(MouthParam3);
      sb.Append(",SkinItemId: ");
      sb.Append(SkinItemId);
      sb.Append(",SkinColor: ");
      sb.Append(SkinColor);
      sb.Append(",LensesId: ");
      sb.Append(LensesId);
      sb.Append(",LensesColor: ");
      sb.Append(LensesColor);
      sb.Append(",EyebrowId: ");
      sb.Append(EyebrowId);
      sb.Append(",EyebrowColor: ");
      sb.Append(EyebrowColor);
      sb.Append(",EyeShadowId: ");
      sb.Append(EyeShadowId);
      sb.Append(",EyeShadowColor: ");
      sb.Append(EyeShadowColor);
      sb.Append(",LipGlossId: ");
      sb.Append(LipGlossId);
      sb.Append(",LipGlossColor: ");
      sb.Append(LipGlossColor);
      sb.Append(",BeardId: ");
      sb.Append(BeardId);
      sb.Append(",BeardColor: ");
      sb.Append(BeardColor);
      sb.Append(",BlusherId: ");
      sb.Append(BlusherId);
      sb.Append(",BlusherColor: ");
      sb.Append(BlusherColor);
      sb.Append(",PaintingId: ");
      sb.Append(PaintingId);
      sb.Append(",PaintingColor: ");
      sb.Append(PaintingColor);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
