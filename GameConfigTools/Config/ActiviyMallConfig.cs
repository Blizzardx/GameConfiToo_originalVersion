/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Config
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class ActiviyMallConfig : TBase
  {
    private int _id;
    private int _itemId;
    private int _tab;
    private int _order;
    private int _canGive;
    private int _discount;
    private string _discountStart;
    private string _discountEnd;
    private int _discountCount;
    private int _buyLimitId;
    private int _buyLimitMessageId;
    private int _count;
    private int _topType;
    private string _topStart;
    private string _topEnd;
    private int _version;
    private int _currencyType;
    private int _price;

    public int Id
    {
      get
      {
        return _id;
      }
      set
      {
        __isset.id = true;
        this._id = value;
      }
    }

    public int ItemId
    {
      get
      {
        return _itemId;
      }
      set
      {
        __isset.itemId = true;
        this._itemId = value;
      }
    }

    public int Tab
    {
      get
      {
        return _tab;
      }
      set
      {
        __isset.tab = true;
        this._tab = value;
      }
    }

    public int Order
    {
      get
      {
        return _order;
      }
      set
      {
        __isset.order = true;
        this._order = value;
      }
    }

    public int CanGive
    {
      get
      {
        return _canGive;
      }
      set
      {
        __isset.canGive = true;
        this._canGive = value;
      }
    }

    public int Discount
    {
      get
      {
        return _discount;
      }
      set
      {
        __isset.discount = true;
        this._discount = value;
      }
    }

    public string DiscountStart
    {
      get
      {
        return _discountStart;
      }
      set
      {
        __isset.discountStart = true;
        this._discountStart = value;
      }
    }

    public string DiscountEnd
    {
      get
      {
        return _discountEnd;
      }
      set
      {
        __isset.discountEnd = true;
        this._discountEnd = value;
      }
    }

    public int DiscountCount
    {
      get
      {
        return _discountCount;
      }
      set
      {
        __isset.discountCount = true;
        this._discountCount = value;
      }
    }

    public int BuyLimitId
    {
      get
      {
        return _buyLimitId;
      }
      set
      {
        __isset.buyLimitId = true;
        this._buyLimitId = value;
      }
    }

    public int BuyLimitMessageId
    {
      get
      {
        return _buyLimitMessageId;
      }
      set
      {
        __isset.buyLimitMessageId = true;
        this._buyLimitMessageId = value;
      }
    }

    public int Count
    {
      get
      {
        return _count;
      }
      set
      {
        __isset.count = true;
        this._count = value;
      }
    }

    public int TopType
    {
      get
      {
        return _topType;
      }
      set
      {
        __isset.topType = true;
        this._topType = value;
      }
    }

    public string TopStart
    {
      get
      {
        return _topStart;
      }
      set
      {
        __isset.topStart = true;
        this._topStart = value;
      }
    }

    public string TopEnd
    {
      get
      {
        return _topEnd;
      }
      set
      {
        __isset.topEnd = true;
        this._topEnd = value;
      }
    }

    public int Version
    {
      get
      {
        return _version;
      }
      set
      {
        __isset.version = true;
        this._version = value;
      }
    }

    public int CurrencyType
    {
      get
      {
        return _currencyType;
      }
      set
      {
        __isset.currencyType = true;
        this._currencyType = value;
      }
    }

    public int Price
    {
      get
      {
        return _price;
      }
      set
      {
        __isset.price = true;
        this._price = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool id;
      public bool itemId;
      public bool tab;
      public bool order;
      public bool canGive;
      public bool discount;
      public bool discountStart;
      public bool discountEnd;
      public bool discountCount;
      public bool buyLimitId;
      public bool buyLimitMessageId;
      public bool count;
      public bool topType;
      public bool topStart;
      public bool topEnd;
      public bool version;
      public bool currencyType;
      public bool price;
    }

    public ActiviyMallConfig() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.I32) {
              Id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              ItemId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.I32) {
              Tab = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.I32) {
              Order = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 50:
            if (field.Type == TType.I32) {
              CanGive = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 60:
            if (field.Type == TType.I32) {
              Discount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 70:
            if (field.Type == TType.String) {
              DiscountStart = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 80:
            if (field.Type == TType.String) {
              DiscountEnd = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 90:
            if (field.Type == TType.I32) {
              DiscountCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 100:
            if (field.Type == TType.I32) {
              BuyLimitId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 110:
            if (field.Type == TType.I32) {
              BuyLimitMessageId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 120:
            if (field.Type == TType.I32) {
              Count = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 130:
            if (field.Type == TType.I32) {
              TopType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 140:
            if (field.Type == TType.String) {
              TopStart = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 150:
            if (field.Type == TType.String) {
              TopEnd = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 160:
            if (field.Type == TType.I32) {
              Version = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 170:
            if (field.Type == TType.I32) {
              CurrencyType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 180:
            if (field.Type == TType.I32) {
              Price = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ActiviyMallConfig");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.id) {
        field.Name = "id";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id);
        oprot.WriteFieldEnd();
      }
      if (__isset.itemId) {
        field.Name = "itemId";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ItemId);
        oprot.WriteFieldEnd();
      }
      if (__isset.tab) {
        field.Name = "tab";
        field.Type = TType.I32;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Tab);
        oprot.WriteFieldEnd();
      }
      if (__isset.order) {
        field.Name = "order";
        field.Type = TType.I32;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Order);
        oprot.WriteFieldEnd();
      }
      if (__isset.canGive) {
        field.Name = "canGive";
        field.Type = TType.I32;
        field.ID = 50;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(CanGive);
        oprot.WriteFieldEnd();
      }
      if (__isset.discount) {
        field.Name = "discount";
        field.Type = TType.I32;
        field.ID = 60;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Discount);
        oprot.WriteFieldEnd();
      }
      if (DiscountStart != null && __isset.discountStart) {
        field.Name = "discountStart";
        field.Type = TType.String;
        field.ID = 70;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DiscountStart);
        oprot.WriteFieldEnd();
      }
      if (DiscountEnd != null && __isset.discountEnd) {
        field.Name = "discountEnd";
        field.Type = TType.String;
        field.ID = 80;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DiscountEnd);
        oprot.WriteFieldEnd();
      }
      if (__isset.discountCount) {
        field.Name = "discountCount";
        field.Type = TType.I32;
        field.ID = 90;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DiscountCount);
        oprot.WriteFieldEnd();
      }
      if (__isset.buyLimitId) {
        field.Name = "buyLimitId";
        field.Type = TType.I32;
        field.ID = 100;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BuyLimitId);
        oprot.WriteFieldEnd();
      }
      if (__isset.buyLimitMessageId) {
        field.Name = "buyLimitMessageId";
        field.Type = TType.I32;
        field.ID = 110;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BuyLimitMessageId);
        oprot.WriteFieldEnd();
      }
      if (__isset.count) {
        field.Name = "count";
        field.Type = TType.I32;
        field.ID = 120;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Count);
        oprot.WriteFieldEnd();
      }
      if (__isset.topType) {
        field.Name = "topType";
        field.Type = TType.I32;
        field.ID = 130;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TopType);
        oprot.WriteFieldEnd();
      }
      if (TopStart != null && __isset.topStart) {
        field.Name = "topStart";
        field.Type = TType.String;
        field.ID = 140;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TopStart);
        oprot.WriteFieldEnd();
      }
      if (TopEnd != null && __isset.topEnd) {
        field.Name = "topEnd";
        field.Type = TType.String;
        field.ID = 150;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TopEnd);
        oprot.WriteFieldEnd();
      }
      if (__isset.version) {
        field.Name = "version";
        field.Type = TType.I32;
        field.ID = 160;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Version);
        oprot.WriteFieldEnd();
      }
      if (__isset.currencyType) {
        field.Name = "currencyType";
        field.Type = TType.I32;
        field.ID = 170;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(CurrencyType);
        oprot.WriteFieldEnd();
      }
      if (__isset.price) {
        field.Name = "price";
        field.Type = TType.I32;
        field.ID = 180;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Price);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ActiviyMallConfig(");
      sb.Append("Id: ");
      sb.Append(Id);
      sb.Append(",ItemId: ");
      sb.Append(ItemId);
      sb.Append(",Tab: ");
      sb.Append(Tab);
      sb.Append(",Order: ");
      sb.Append(Order);
      sb.Append(",CanGive: ");
      sb.Append(CanGive);
      sb.Append(",Discount: ");
      sb.Append(Discount);
      sb.Append(",DiscountStart: ");
      sb.Append(DiscountStart);
      sb.Append(",DiscountEnd: ");
      sb.Append(DiscountEnd);
      sb.Append(",DiscountCount: ");
      sb.Append(DiscountCount);
      sb.Append(",BuyLimitId: ");
      sb.Append(BuyLimitId);
      sb.Append(",BuyLimitMessageId: ");
      sb.Append(BuyLimitMessageId);
      sb.Append(",Count: ");
      sb.Append(Count);
      sb.Append(",TopType: ");
      sb.Append(TopType);
      sb.Append(",TopStart: ");
      sb.Append(TopStart);
      sb.Append(",TopEnd: ");
      sb.Append(TopEnd);
      sb.Append(",Version: ");
      sb.Append(Version);
      sb.Append(",CurrencyType: ");
      sb.Append(CurrencyType);
      sb.Append(",Price: ");
      sb.Append(Price);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
