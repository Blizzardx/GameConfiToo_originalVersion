/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace Config
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SystemLoverConfig : TBase
  {
    private List<SystemLoverExpStepInfo> _expStepInfoList;
    private int _maxLoverExp;
    private int _battleAddLoverExpCycleId;
    private int _battleAddLoverExpCounterId;
    private int _findLoverIB;
    private int _battleAddLoverExp;
    private int _battleAddLoverExpCount;
    private int _loverGiftListCycleId;
    private int _loverGiftListCounterId;
    private List<SystemLoverGiftInfo> _giftInfoList;

    public List<SystemLoverExpStepInfo> ExpStepInfoList
    {
      get
      {
        return _expStepInfoList;
      }
      set
      {
        __isset.expStepInfoList = true;
        this._expStepInfoList = value;
      }
    }

    public int MaxLoverExp
    {
      get
      {
        return _maxLoverExp;
      }
      set
      {
        __isset.maxLoverExp = true;
        this._maxLoverExp = value;
      }
    }

    public int BattleAddLoverExpCycleId
    {
      get
      {
        return _battleAddLoverExpCycleId;
      }
      set
      {
        __isset.battleAddLoverExpCycleId = true;
        this._battleAddLoverExpCycleId = value;
      }
    }

    public int BattleAddLoverExpCounterId
    {
      get
      {
        return _battleAddLoverExpCounterId;
      }
      set
      {
        __isset.battleAddLoverExpCounterId = true;
        this._battleAddLoverExpCounterId = value;
      }
    }

    public int FindLoverIB
    {
      get
      {
        return _findLoverIB;
      }
      set
      {
        __isset.findLoverIB = true;
        this._findLoverIB = value;
      }
    }

    public int BattleAddLoverExp
    {
      get
      {
        return _battleAddLoverExp;
      }
      set
      {
        __isset.battleAddLoverExp = true;
        this._battleAddLoverExp = value;
      }
    }

    public int BattleAddLoverExpCount
    {
      get
      {
        return _battleAddLoverExpCount;
      }
      set
      {
        __isset.battleAddLoverExpCount = true;
        this._battleAddLoverExpCount = value;
      }
    }

    public int LoverGiftListCycleId
    {
      get
      {
        return _loverGiftListCycleId;
      }
      set
      {
        __isset.loverGiftListCycleId = true;
        this._loverGiftListCycleId = value;
      }
    }

    public int LoverGiftListCounterId
    {
      get
      {
        return _loverGiftListCounterId;
      }
      set
      {
        __isset.loverGiftListCounterId = true;
        this._loverGiftListCounterId = value;
      }
    }

    public List<SystemLoverGiftInfo> GiftInfoList
    {
      get
      {
        return _giftInfoList;
      }
      set
      {
        __isset.giftInfoList = true;
        this._giftInfoList = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool expStepInfoList;
      public bool maxLoverExp;
      public bool battleAddLoverExpCycleId;
      public bool battleAddLoverExpCounterId;
      public bool findLoverIB;
      public bool battleAddLoverExp;
      public bool battleAddLoverExpCount;
      public bool loverGiftListCycleId;
      public bool loverGiftListCounterId;
      public bool giftInfoList;
    }

    public SystemLoverConfig() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 10:
            if (field.Type == TType.List) {
              {
                ExpStepInfoList = new List<SystemLoverExpStepInfo>();
                TList _list33 = iprot.ReadListBegin();
                for( int _i34 = 0; _i34 < _list33.Count; ++_i34)
                {
                  SystemLoverExpStepInfo _elem35 = new SystemLoverExpStepInfo();
                  _elem35 = new SystemLoverExpStepInfo();
                  _elem35.Read(iprot);
                  ExpStepInfoList.Add(_elem35);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              MaxLoverExp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 30:
            if (field.Type == TType.I32) {
              BattleAddLoverExpCycleId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 40:
            if (field.Type == TType.I32) {
              BattleAddLoverExpCounterId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 50:
            if (field.Type == TType.I32) {
              FindLoverIB = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 60:
            if (field.Type == TType.I32) {
              BattleAddLoverExp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 70:
            if (field.Type == TType.I32) {
              BattleAddLoverExpCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 80:
            if (field.Type == TType.I32) {
              LoverGiftListCycleId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 90:
            if (field.Type == TType.I32) {
              LoverGiftListCounterId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 100:
            if (field.Type == TType.List) {
              {
                GiftInfoList = new List<SystemLoverGiftInfo>();
                TList _list36 = iprot.ReadListBegin();
                for( int _i37 = 0; _i37 < _list36.Count; ++_i37)
                {
                  SystemLoverGiftInfo _elem38 = new SystemLoverGiftInfo();
                  _elem38 = new SystemLoverGiftInfo();
                  _elem38.Read(iprot);
                  GiftInfoList.Add(_elem38);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SystemLoverConfig");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (ExpStepInfoList != null && __isset.expStepInfoList) {
        field.Name = "expStepInfoList";
        field.Type = TType.List;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, ExpStepInfoList.Count));
          foreach (SystemLoverExpStepInfo _iter39 in ExpStepInfoList)
          {
            _iter39.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.maxLoverExp) {
        field.Name = "maxLoverExp";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MaxLoverExp);
        oprot.WriteFieldEnd();
      }
      if (__isset.battleAddLoverExpCycleId) {
        field.Name = "battleAddLoverExpCycleId";
        field.Type = TType.I32;
        field.ID = 30;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BattleAddLoverExpCycleId);
        oprot.WriteFieldEnd();
      }
      if (__isset.battleAddLoverExpCounterId) {
        field.Name = "battleAddLoverExpCounterId";
        field.Type = TType.I32;
        field.ID = 40;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BattleAddLoverExpCounterId);
        oprot.WriteFieldEnd();
      }
      if (__isset.findLoverIB) {
        field.Name = "findLoverIB";
        field.Type = TType.I32;
        field.ID = 50;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FindLoverIB);
        oprot.WriteFieldEnd();
      }
      if (__isset.battleAddLoverExp) {
        field.Name = "battleAddLoverExp";
        field.Type = TType.I32;
        field.ID = 60;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BattleAddLoverExp);
        oprot.WriteFieldEnd();
      }
      if (__isset.battleAddLoverExpCount) {
        field.Name = "battleAddLoverExpCount";
        field.Type = TType.I32;
        field.ID = 70;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(BattleAddLoverExpCount);
        oprot.WriteFieldEnd();
      }
      if (__isset.loverGiftListCycleId) {
        field.Name = "loverGiftListCycleId";
        field.Type = TType.I32;
        field.ID = 80;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(LoverGiftListCycleId);
        oprot.WriteFieldEnd();
      }
      if (__isset.loverGiftListCounterId) {
        field.Name = "loverGiftListCounterId";
        field.Type = TType.I32;
        field.ID = 90;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(LoverGiftListCounterId);
        oprot.WriteFieldEnd();
      }
      if (GiftInfoList != null && __isset.giftInfoList) {
        field.Name = "giftInfoList";
        field.Type = TType.List;
        field.ID = 100;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, GiftInfoList.Count));
          foreach (SystemLoverGiftInfo _iter40 in GiftInfoList)
          {
            _iter40.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("SystemLoverConfig(");
      sb.Append("ExpStepInfoList: ");
      sb.Append(ExpStepInfoList);
      sb.Append(",MaxLoverExp: ");
      sb.Append(MaxLoverExp);
      sb.Append(",BattleAddLoverExpCycleId: ");
      sb.Append(BattleAddLoverExpCycleId);
      sb.Append(",BattleAddLoverExpCounterId: ");
      sb.Append(BattleAddLoverExpCounterId);
      sb.Append(",FindLoverIB: ");
      sb.Append(FindLoverIB);
      sb.Append(",BattleAddLoverExp: ");
      sb.Append(BattleAddLoverExp);
      sb.Append(",BattleAddLoverExpCount: ");
      sb.Append(BattleAddLoverExpCount);
      sb.Append(",LoverGiftListCycleId: ");
      sb.Append(LoverGiftListCycleId);
      sb.Append(",LoverGiftListCounterId: ");
      sb.Append(LoverGiftListCounterId);
      sb.Append(",GiftInfoList: ");
      sb.Append(GiftInfoList);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
